#!/usr/bin/env bash

success() {
	echo -e "\033[92m\033[1m\033[7m${@}\033[0m"
}

success_lite() {
	echo -e "\033[92m${@}\033[0m"
}

error() {
	echo -e "\033[91m\033[7m\033[1m${@}\033[0m"
}

warn() {
	echo -e "\033[93m\033[1m\033[7m${@}\033[0m"
}

warn_lite() {
	echo -e "\033[93m${@}\033[0m"
}

exit_on_error() {
	if [ $1 -ne 0 ]
	then
		error "Error in test. Exiting..."
		exit $1
	else
		success_lite "Success in test."
	fi
}

handle() {
	$1
	exit_on_error $?
}

help() {
	echo "Usage: ./test [help] [c_unit] [size] [lint]"
}

c_unit() {
	warn "Running C unit test chain"
	echo

	# Compile C unit tests
	warn_lite "Making C header unit test"
	handle make c_unit
	echo

	warn_lite "Running C header unit test"
	handle bin/c
	echo

	success "Finished"
}

lint() {
	warn "Running lint test"
	echo

	find . -name "*.c" -print0 | while read -d $'\0' file
	do
		warn_lite "Executing gcc --syntax-only $file"
		handle "gcc --syntax-only -pedantic -Wall -Wextra -I src/c $file"
		echo
	done

	success "Finished"
}

size() {
	warn "Running size test on optimization levels"
	echo

	warn_lite "Compiling and getting file sizes"
	handle tests/size.py
	echo

	success "Finished"
}

for test in "$@"
do
	$test
done

echo -e "finished: ${SECONDS} seconds"
